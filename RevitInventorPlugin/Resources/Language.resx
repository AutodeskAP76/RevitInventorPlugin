<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  <!--  Main Form elements  -->
  <data name="OffsiteForm_Text" xml:space="preserve">
    <value>Offsite Panel</value>
  </data>
  <data name="tabControl1_tabSOW_Text" xml:space="preserve">
    <value>Scope of Work</value>
  </data>
  <data name="tabControl1_tabMapping_Text" xml:space="preserve">
    <value>Mappings</value>
  </data>
  
  <data name="grBoxRevFamilies_Text" xml:space="preserve">
    <value>Revit families</value>
  </data>
  <data name="grBoxRevFamTypes_Text" xml:space="preserve">
    <value>Revit family Types</value>
  </data>
  <data name="grBoxRevElements_Text" xml:space="preserve">
    <value>Revit Elements</value>
  </data>
  <data name="btnProperties_Text" xml:space="preserve">
    <value>Show Properties</value>
  </data>
  <data name="btnSelectAllElements_Text" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="btnUnselectAll_Text" xml:space="preserve">
    <value>Unselect All</value>
  </data>
  <data name="btnProcessElements_Text" xml:space="preserve">
    <value>Process Selected elements</value>
  </data>
  <data name="dgElements_Col_ElId_Text" xml:space="preserve">
    <value>Element Identifier</value>
  </data>
  <data name="dgElements_Col_ElName_Text" xml:space="preserve">
    <value>Element Name</value>
  </data>
  <data name="dgElements_Col_ElVal_Text" xml:space="preserve">
    <value>Element Family Type</value>
  </data>
  
  <data name="grpBoxInventorTemplates_Text" xml:space="preserve">
    <value>Inventor Templates - Revit Families mappings</value>
  </data>  
  <data name="btnBrowse_Text" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="btnSelectFromScope_Text" xml:space="preserve">
    <value>Select Revit Families</value>
  </data>  
  <data name="btnClearSelectedMapping_Text" xml:space="preserve">
    <value>Clear Selection</value>
  </data>  
  <data name="grpBoxRevitFamilies_Text" xml:space="preserve">
    <value>Parameters Mapping</value>
  </data>
  <data name="lblTotalParamNr_Text" xml:space="preserve">
    <value>Total # of parameters:</value>
  </data>
  <data name="lblTotalParamMappedNr_Text" xml:space="preserve">
    <value>Total # of mapped parameters:</value>
  </data>
  <data name="btnRevitParametersSel_Text" xml:space="preserve">
    <value>Select Revit Parameters</value>
  </data>
  <data name="btnClearSelectedParamMapping_Text" xml:space="preserve">
    <value>Clear Selection</value>
  </data>  
  <data name="btnClearLogs_Text" xml:space="preserve">
    <value>Clear Logs</value>
  </data>
  <data name="btnGenerateModel_Text" xml:space="preserve">
    <value>Generate Inventor Model</value>
  </data>
  
  <data name="btnGenerateBOM_Text" xml:space="preserve">
    <value>Generate Inventor BOM</value>
  </data>  
  <data name="btnGenerateDrawings_Text" xml:space="preserve">
    <value>Generate Inventor Drawings</value>
  </data>  
  
  <data name="dgInvRevMapping_Col_InvTempl_Text" xml:space="preserve">
    <value>Inventor Template</value>
  </data>
  <data name="dgInvRevMapping_Col_RevFam_Text" xml:space="preserve">
    <value>Revit Family</value>
  </data>
  <data name="dgParamsMapping_Col_InvParam_Text" xml:space="preserve">
    <value>Inventor Key Parameter</value>
  </data>
  <data name="dgParamsMapping_Col_RevitParam_Text" xml:space="preserve">
    <value>Revit Parameter</value>
  </data>

  <data name="btnCancel_Text" xml:space="preserve">
    <value>Close</value>
  </data>
  
  <!--  Message Boxes  -->
  <data name="msgBox_SelInvTemplate" xml:space="preserve">
    <value>You have to select one Inventor Template</value>
  </data>
  <data name="msgBox_ZipFileParamMap" xml:space="preserve">
    <value>Cannot map parameters for zip file</value>
  </data>
  <data name="msgBox_RevitFamAssociat" xml:space="preserve">
    <value>There must be a Revit Family associated with the selected inventor template</value>
  </data>
  <data name="msgBox_SelInvRevMapRow" xml:space="preserve">
    <value>You have to select one Inventor - Revit mapping row</value>
  </data>
  <data name="msgBox_SelParamMapRow" xml:space="preserve">
    <value>You have to select one Parameter mapping row</value>
  </data>
  <data name="msgBox_SelRevElement" xml:space="preserve">
    <value>At least one Revit Element must be selected</value>
  </data>
  <data name="msgBox_SelRevElement1" xml:space="preserve">
    <value>You have to select one Revit Element</value>
  </data>
  <data name="msgBox_MissingMapp" xml:space="preserve">
    <value>There are some missing mappings</value>
  </data>
  <data name="msgBox_SelMultipleRevFam" xml:space="preserve">
    <value>Selected elements belong to more than one family. They have to be part of a unique family</value>
  </data>
  <data name="msgBox_SelElNoRevFam" xml:space="preserve">
    <value>Selected elements do not have a corresponding family type. Please modify your selection</value>
  </data>
  <data name="msgBox_SelPropAlreadyAssigned" xml:space="preserve">
    <value>The selected Revit property has already been assigned. Please select another one</value>
  </data>
  <data name="msgBox_SelOneRow" xml:space="preserve">
    <value>You have to select one row</value>
  </data>
  
  <!--  Revit Inventor Mapping popup  -->
  <data name="RevInventor_Popup_Text" xml:space="preserve">
    <value>Revit Families</value>
  </data>
  <data name="grBoxSelCurrScope_Text" xml:space="preserve">
    <value>Select from Current Scope</value>
  </data>  
  <data name="btnSelect_Text" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="btnClose_Text" xml:space="preserve">
    <value>Close</value>
  </data>
  
  <!--  Revit Inventor Parameters Mapping popup  -->
  <data name="RevInventorParam_Popup_Text" xml:space="preserve">
    <value>Revit Families Parameters</value>
  </data>
  <data name="grBoxSelParams_Text" xml:space="preserve">
    <value>Select Parameters</value>
  </data>
  
  <!--  Properties popup  -->
  <data name="RevProp_Popup_Text" xml:space="preserve">
    <value>Properties Collector</value>
  </data>
  <data name="grBoxElTypeInfo_Text" xml:space="preserve">
    <value>Element Type Information</value>
  </data>  
  <data name="lblFamily_Text" xml:space="preserve">
    <value>Family</value>
  </data> 
  <data name="lblFamilyType_Text" xml:space="preserve">
    <value>Family Type</value>
  </data>  
  <data name="grBoxProp_Text" xml:space="preserve">
    <value>Element Properties</value>
  </data> 
  <data name="grBoxElTypeProps_Text" xml:space="preserve">
    <value>Element Type Properties</value>
  </data>
  <data name="dgElementParams_Col_Id_Text" xml:space="preserve">
    <value>Property Id</value>
  </data>
  <data name="dgElementParams_Col_Name_Text" xml:space="preserve">
    <value>Property Name</value>
  </data>
  <data name="dgElementParams_Col_Value_Text" xml:space="preserve">
    <value>Property Value</value>
  </data>
  
</root>